# Generated by Django 3.2.4 on 2021-10-06 10:06

import bapp.utils
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('stripeid', models.CharField(max_length=255)),
                ('membership', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', bapp.utils.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='book_list',
            fields=[
                ('book_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('book_title', models.CharField(max_length=100)),
                ('book_code', models.CharField(blank=True, max_length=100)),
                ('book_img', models.ImageField(blank=True, upload_to='book_img', verbose_name='book Image')),
                ('book_description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('subscription_status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Normal', max_length=40)),
                ('subscription_id', models.CharField(max_length=100, verbose_name='subscription ID')),
                ('book_plan', models.CharField(max_length=10)),
                ('publishing_status', models.CharField(choices=[('Pending', 'Pending'), ('Published', 'Published')], default='Pending', max_length=15)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=250)),
                ('book_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-creation_date',),
            },
        ),
        migrations.CreateModel(
            name='img_addon',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('img_title', models.CharField(max_length=100)),
                ('img', models.ImageField(blank=True, upload_to='book_img', verbose_name='book Image')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bapp.book_list')),
            ],
        ),
        migrations.CreateModel(
            name='chapter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chapter_title', models.CharField(max_length=100)),
                ('chapter_body', models.TextField(blank=True)),
                ('chapter_rank', models.PositiveSmallIntegerField(default=0, verbose_name='Rank')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bapp.book_list')),
            ],
        ),
    ]
